[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "protein-sssl-operator"
authors = [{name = "Daniel Schmidt", email = "daniel@terragonlabs.ai"}]
description = "Self-Supervised Structure-Sequence Learning with Neural Operators for Protein Folding"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["protein folding", "neural operators", "self-supervised learning", "bioinformatics"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License", 
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version"]
dependencies = [
    "torch>=2.0.0",
    "torchvision",
    "numpy>=1.21.0",
    "scipy",
    "pandas",
    "scikit-learn",
    "biopython",
    "einops",
    "transformers>=4.20.0",
    "datasets",
    "wandb",
    "matplotlib",
    "seaborn",
    "tqdm",
    "omegaconf",
    "hydra-core",
    "biotite",
    "py3Dmol",
]

[project.optional-dependencies]
md_tools = [
    "mdtraj",
    "openmm",
    "pdbfixer",
]
dev = [
    "pytest",
    "pytest-cov", 
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]
gpu = [
    "flash-attn",
    "xformers",
    "triton",
]
lightning = [
    "pytorch-lightning",
    "torchmetrics",
]
optimization = [
    "deepspeed",
    "optuna",
    "ray[tune]",
]

[project.urls]
Homepage = "https://github.com/danieleschmidt/protein-sssl-operator"
Repository = "https://github.com/danieleschmidt/protein-sssl-operator"
Documentation = "https://protein-sssl-operator.readthedocs.io/"
"Bug Tracker" = "https://github.com/danieleschmidt/protein-sssl-operator/issues"

[project.scripts]
protein-ssl-pretrain = "scripts.pretrain_ssl:main"
protein-predict-structure = "scripts.predict_structure:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["protein_sssl*"]
exclude = ["tests*"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["protein_sssl"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]