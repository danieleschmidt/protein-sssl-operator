# Default values for protein-sssl
# This is a YAML-formatted file.

# Global deployment configuration
global:
  # Deployment region and mode
  region: "us-east-1"
  zone: "primary"
  environment: "production"
  deploymentMode: "active"
  
  # Multi-region settings
  multiRegion:
    enabled: true
    primaryRegion: "us-east-1"
    regions:
      - name: "us-east-1"
        zone: "primary"
        dataResidency: true
      - name: "eu-west-1"
        zone: "secondary"
        dataResidency: true
    crossRegionReplication: true
    dataSovereignty: "strict"
  
  # Compliance and legal settings
  compliance:
    frameworks: ["gdpr", "ccpa", "hipaa", "soc2", "iso27001"]
    dataClassification: "confidential"
    auditLogging: true
    dataRetention:
      enabled: true
      defaultPeriodDays: 365
      autoDelete: true
    exportControl:
      enabled: true
      screening: true
    
  # Internationalization settings
  i18n:
    enabled: true
    defaultLanguage: "en"
    supportedLanguages: ["en", "es", "fr", "de", "ja", "zh", "ar", "pt", "it", "ru"]
    defaultLocale: "en-US"
    rtlSupport: true
    
  # Accessibility settings
  accessibility:
    enabled: true
    wcagLevel: "AA"
    screenReaderSupport: true
    keyboardNavigation: true
    highContrast: true
    
  # Cultural adaptation settings
  cultural:
    enabled: true
    regions: ["western_europe", "north_america", "east_asia", "southeast_asia"]
    scientificNotation: "decimal_point"
    adaptColors: true
    adaptCommunication: true
    
  # Security settings
  security:
    encryption:
      atRest: true
      inTransit: true
      keyRotation: true
    networkPolicies: true
    podSecurityStandards: "restricted"
    
replicaCount:
  training: 1
  inference: 3

image:
  repository: ghcr.io/user/protein-sssl-operator
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  training:
    type: ClusterIP
    ports:
      jupyter: 8888
      tensorboard: 6006
  inference:
    type: LoadBalancer
    port: 80
    targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: protein-sssl.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: protein-sssl-tls
      hosts:
        - protein-sssl.example.com

resources:
  training:
    limits:
      cpu: "8"
      memory: 32Gi
      nvidia.com/gpu: 2
    requests:
      cpu: "4" 
      memory: 16Gi
      nvidia.com/gpu: 1
  inference:
    limits:
      cpu: "4"
      memory: 16Gi
      nvidia.com/gpu: 1
    requests:
      cpu: "2"
      memory: 8Gi
      nvidia.com/gpu: 1

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  accelerator: nvidia-tesla-v100

tolerations:
  - key: nvidia.com/gpu
    operator: Exists
    effect: NoSchedule

affinity: {}

persistence:
  data:
    enabled: true
    storageClass: "fast-ssd"
    size: 1Ti
    accessMode: ReadOnlyMany
  checkpoints:
    enabled: true
    storageClass: "fast-ssd"
    size: 500Gi
    accessMode: ReadWriteMany

config:
  environment: production
  logLevel: INFO
  batchSize: 8
  maxSequenceLength: 512
  modelPath: "/app/checkpoints/best_model.pt"
  
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
  prometheusRule:
    enabled: true

secrets:
  wandb:
    apiKey: ""
  huggingface:
    token: ""

env:
  - name: CUDA_VISIBLE_DEVICES
    value: "all"
  - name: PYTHONPATH
    value: "/app"
  - name: OMP_NUM_THREADS
    value: "1"
  # Global deployment environment variables
  - name: GLOBAL_DEPLOYMENT_REGION
    value: "{{ .Values.global.region }}"
  - name: GLOBAL_DEPLOYMENT_ZONE
    value: "{{ .Values.global.zone }}"
  - name: COMPLIANCE_FRAMEWORKS
    value: "{{ join \",\" .Values.global.compliance.frameworks }}"
  - name: SUPPORTED_LANGUAGES
    value: "{{ join \",\" .Values.global.i18n.supportedLanguages }}"
  - name: DEFAULT_LOCALE
    value: "{{ .Values.global.i18n.defaultLocale }}"
  - name: WCAG_LEVEL
    value: "{{ .Values.global.accessibility.wcagLevel }}"
  - name: DATA_CLASSIFICATION
    value: "{{ .Values.global.compliance.dataClassification }}"

probes:
  liveness:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  readiness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

networkPolicy:
  enabled: true
  ingress:
    - from: []
  egress:
    - to: []